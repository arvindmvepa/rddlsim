non-fluents nf_game_of_life_inst_pomdp__5 {
	domain = game_of_life_pomdp;
	objects {
		x_pos : {x1,x2,x3,x4};
		y_pos : {y1,y2,y3,y4};
	};
	non-fluents {
		NOISE-PROB(x1,y1) = 0.14535974;
		NEIGHBOR(x1,y1,x1,y2);
		NEIGHBOR(x1,y1,x2,y1);
		NEIGHBOR(x1,y1,x2,y2);
		NOISE-PROB(x1,y2) = 0.10511123;
		NEIGHBOR(x1,y2,x1,y1);
		NEIGHBOR(x1,y2,x1,y3);
		NEIGHBOR(x1,y2,x2,y1);
		NEIGHBOR(x1,y2,x2,y2);
		NEIGHBOR(x1,y2,x2,y3);
		NOISE-PROB(x1,y3) = 0.13735634;
		NEIGHBOR(x1,y3,x1,y2);
		NEIGHBOR(x1,y3,x1,y4);
		NEIGHBOR(x1,y3,x2,y2);
		NEIGHBOR(x1,y3,x2,y3);
		NEIGHBOR(x1,y3,x2,y4);
		NOISE-PROB(x1,y4) = 0.10766763;
		NEIGHBOR(x1,y4,x1,y3);
		NEIGHBOR(x1,y4,x2,y3);
		NEIGHBOR(x1,y4,x2,y4);
		NOISE-PROB(x2,y1) = 0.12730555;
		NEIGHBOR(x2,y1,x1,y1);
		NEIGHBOR(x2,y1,x1,y2);
		NEIGHBOR(x2,y1,x2,y2);
		NEIGHBOR(x2,y1,x3,y1);
		NEIGHBOR(x2,y1,x3,y2);
		NOISE-PROB(x2,y2) = 0.10654996;
		NEIGHBOR(x2,y2,x1,y1);
		NEIGHBOR(x2,y2,x1,y2);
		NEIGHBOR(x2,y2,x1,y3);
		NEIGHBOR(x2,y2,x2,y1);
		NEIGHBOR(x2,y2,x2,y3);
		NEIGHBOR(x2,y2,x3,y1);
		NEIGHBOR(x2,y2,x3,y2);
		NEIGHBOR(x2,y2,x3,y3);
		NOISE-PROB(x2,y3) = 0.12566918;
		NEIGHBOR(x2,y3,x1,y2);
		NEIGHBOR(x2,y3,x1,y3);
		NEIGHBOR(x2,y3,x1,y4);
		NEIGHBOR(x2,y3,x2,y2);
		NEIGHBOR(x2,y3,x2,y4);
		NEIGHBOR(x2,y3,x3,y2);
		NEIGHBOR(x2,y3,x3,y3);
		NEIGHBOR(x2,y3,x3,y4);
		NOISE-PROB(x2,y4) = 0.13794133;
		NEIGHBOR(x2,y4,x1,y3);
		NEIGHBOR(x2,y4,x1,y4);
		NEIGHBOR(x2,y4,x2,y3);
		NEIGHBOR(x2,y4,x3,y3);
		NEIGHBOR(x2,y4,x3,y4);
		NOISE-PROB(x3,y1) = 0.14023331;
		NEIGHBOR(x3,y1,x2,y1);
		NEIGHBOR(x3,y1,x2,y2);
		NEIGHBOR(x3,y1,x3,y2);
		NEIGHBOR(x3,y1,x4,y1);
		NEIGHBOR(x3,y1,x4,y2);
		NOISE-PROB(x3,y2) = 0.13974033;
		NEIGHBOR(x3,y2,x2,y1);
		NEIGHBOR(x3,y2,x2,y2);
		NEIGHBOR(x3,y2,x2,y3);
		NEIGHBOR(x3,y2,x3,y1);
		NEIGHBOR(x3,y2,x3,y3);
		NEIGHBOR(x3,y2,x4,y1);
		NEIGHBOR(x3,y2,x4,y2);
		NEIGHBOR(x3,y2,x4,y3);
		NOISE-PROB(x3,y3) = 0.1448079;
		NEIGHBOR(x3,y3,x2,y2);
		NEIGHBOR(x3,y3,x2,y3);
		NEIGHBOR(x3,y3,x2,y4);
		NEIGHBOR(x3,y3,x3,y2);
		NEIGHBOR(x3,y3,x3,y4);
		NEIGHBOR(x3,y3,x4,y2);
		NEIGHBOR(x3,y3,x4,y3);
		NEIGHBOR(x3,y3,x4,y4);
		NOISE-PROB(x3,y4) = 0.100049004;
		NEIGHBOR(x3,y4,x2,y3);
		NEIGHBOR(x3,y4,x2,y4);
		NEIGHBOR(x3,y4,x3,y3);
		NEIGHBOR(x3,y4,x4,y3);
		NEIGHBOR(x3,y4,x4,y4);
		NOISE-PROB(x4,y1) = 0.10201637;
		NEIGHBOR(x4,y1,x3,y1);
		NEIGHBOR(x4,y1,x3,y2);
		NEIGHBOR(x4,y1,x4,y2);
		NOISE-PROB(x4,y2) = 0.11692064;
		NEIGHBOR(x4,y2,x3,y1);
		NEIGHBOR(x4,y2,x3,y2);
		NEIGHBOR(x4,y2,x3,y3);
		NEIGHBOR(x4,y2,x4,y1);
		NEIGHBOR(x4,y2,x4,y3);
		NOISE-PROB(x4,y3) = 0.10707471;
		NEIGHBOR(x4,y3,x3,y2);
		NEIGHBOR(x4,y3,x3,y3);
		NEIGHBOR(x4,y3,x3,y4);
		NEIGHBOR(x4,y3,x4,y2);
		NEIGHBOR(x4,y3,x4,y4);
		NOISE-PROB(x4,y4) = 0.11319355;
		NEIGHBOR(x4,y4,x3,y3);
		NEIGHBOR(x4,y4,x3,y4);
		NEIGHBOR(x4,y4,x4,y3);
	};
}

instance game_of_life_inst_pomdp__5 {
	domain = game_of_life_pomdp;
	non-fluents = nf_game_of_life_inst_pomdp__5;
	init-state {
		alive(x1,y1);
		alive(x1,y2);
		alive(x1,y3);
		alive(x2,y4);
		alive(x3,y3);
		alive(x4,y2);
		alive(x4,y3);
		alive(x4,y4);
	};

	max-nondef-actions = 1;
	horizon  = 30;
	discount = 1.0;
}
