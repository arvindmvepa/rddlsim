non-fluents nf_game_of_life_inst_pomdp__10 {
	domain = game_of_life_pomdp;
	objects {
		x_pos : {x1,x2,x3,x4,x5,x6};
		y_pos : {y1,y2,y3,y4,y5,y6};
	};
	non-fluents {
		NOISE-PROB(x1,y1) = 0.13656346;
		NEIGHBOR(x1,y1,x1,y2);
		NEIGHBOR(x1,y1,x2,y1);
		NEIGHBOR(x1,y1,x2,y2);
		NOISE-PROB(x1,y2) = 0.1107337;
		NEIGHBOR(x1,y2,x1,y1);
		NEIGHBOR(x1,y2,x1,y3);
		NEIGHBOR(x1,y2,x2,y1);
		NEIGHBOR(x1,y2,x2,y2);
		NEIGHBOR(x1,y2,x2,y3);
		NOISE-PROB(x1,y3) = 0.1355353;
		NEIGHBOR(x1,y3,x1,y2);
		NEIGHBOR(x1,y3,x1,y4);
		NEIGHBOR(x1,y3,x2,y2);
		NEIGHBOR(x1,y3,x2,y3);
		NEIGHBOR(x1,y3,x2,y4);
		NOISE-PROB(x1,y4) = 0.12857325;
		NEIGHBOR(x1,y4,x1,y3);
		NEIGHBOR(x1,y4,x1,y5);
		NEIGHBOR(x1,y4,x2,y3);
		NEIGHBOR(x1,y4,x2,y4);
		NEIGHBOR(x1,y4,x2,y5);
		NOISE-PROB(x1,y5) = 0.12784967;
		NEIGHBOR(x1,y5,x1,y4);
		NEIGHBOR(x1,y5,x1,y6);
		NEIGHBOR(x1,y5,x2,y4);
		NEIGHBOR(x1,y5,x2,y5);
		NEIGHBOR(x1,y5,x2,y6);
		NOISE-PROB(x1,y6) = 0.12763368;
		NEIGHBOR(x1,y6,x1,y5);
		NEIGHBOR(x1,y6,x2,y5);
		NEIGHBOR(x1,y6,x2,y6);
		NOISE-PROB(x2,y1) = 0.11210577;
		NEIGHBOR(x2,y1,x1,y1);
		NEIGHBOR(x2,y1,x1,y2);
		NEIGHBOR(x2,y1,x2,y2);
		NEIGHBOR(x2,y1,x3,y1);
		NEIGHBOR(x2,y1,x3,y2);
		NOISE-PROB(x2,y2) = 0.13759768;
		NEIGHBOR(x2,y2,x1,y1);
		NEIGHBOR(x2,y2,x1,y2);
		NEIGHBOR(x2,y2,x1,y3);
		NEIGHBOR(x2,y2,x2,y1);
		NEIGHBOR(x2,y2,x2,y3);
		NEIGHBOR(x2,y2,x3,y1);
		NEIGHBOR(x2,y2,x3,y2);
		NEIGHBOR(x2,y2,x3,y3);
		NOISE-PROB(x2,y3) = 0.106379986;
		NEIGHBOR(x2,y3,x1,y2);
		NEIGHBOR(x2,y3,x1,y3);
		NEIGHBOR(x2,y3,x1,y4);
		NEIGHBOR(x2,y3,x2,y2);
		NEIGHBOR(x2,y3,x2,y4);
		NEIGHBOR(x2,y3,x3,y2);
		NEIGHBOR(x2,y3,x3,y3);
		NEIGHBOR(x2,y3,x3,y4);
		NOISE-PROB(x2,y4) = 0.14752527;
		NEIGHBOR(x2,y4,x1,y3);
		NEIGHBOR(x2,y4,x1,y4);
		NEIGHBOR(x2,y4,x1,y5);
		NEIGHBOR(x2,y4,x2,y3);
		NEIGHBOR(x2,y4,x2,y5);
		NEIGHBOR(x2,y4,x3,y3);
		NEIGHBOR(x2,y4,x3,y4);
		NEIGHBOR(x2,y4,x3,y5);
		NOISE-PROB(x2,y5) = 0.14630039;
		NEIGHBOR(x2,y5,x1,y4);
		NEIGHBOR(x2,y5,x1,y5);
		NEIGHBOR(x2,y5,x1,y6);
		NEIGHBOR(x2,y5,x2,y4);
		NEIGHBOR(x2,y5,x2,y6);
		NEIGHBOR(x2,y5,x3,y4);
		NEIGHBOR(x2,y5,x3,y5);
		NEIGHBOR(x2,y5,x3,y6);
		NOISE-PROB(x2,y6) = 0.13697225;
		NEIGHBOR(x2,y6,x1,y5);
		NEIGHBOR(x2,y6,x1,y6);
		NEIGHBOR(x2,y6,x2,y5);
		NEIGHBOR(x2,y6,x3,y5);
		NEIGHBOR(x2,y6,x3,y6);
		NOISE-PROB(x3,y1) = 0.14999492;
		NEIGHBOR(x3,y1,x2,y1);
		NEIGHBOR(x3,y1,x2,y2);
		NEIGHBOR(x3,y1,x3,y2);
		NEIGHBOR(x3,y1,x4,y1);
		NEIGHBOR(x3,y1,x4,y2);
		NOISE-PROB(x3,y2) = 0.14184862;
		NEIGHBOR(x3,y2,x2,y1);
		NEIGHBOR(x3,y2,x2,y2);
		NEIGHBOR(x3,y2,x2,y3);
		NEIGHBOR(x3,y2,x3,y1);
		NEIGHBOR(x3,y2,x3,y3);
		NEIGHBOR(x3,y2,x4,y1);
		NEIGHBOR(x3,y2,x4,y2);
		NEIGHBOR(x3,y2,x4,y3);
		NOISE-PROB(x3,y3) = 0.12709264;
		NEIGHBOR(x3,y3,x2,y2);
		NEIGHBOR(x3,y3,x2,y3);
		NEIGHBOR(x3,y3,x2,y4);
		NEIGHBOR(x3,y3,x3,y2);
		NEIGHBOR(x3,y3,x3,y4);
		NEIGHBOR(x3,y3,x4,y2);
		NEIGHBOR(x3,y3,x4,y3);
		NEIGHBOR(x3,y3,x4,y4);
		NOISE-PROB(x3,y4) = 0.13300283;
		NEIGHBOR(x3,y4,x2,y3);
		NEIGHBOR(x3,y4,x2,y4);
		NEIGHBOR(x3,y4,x2,y5);
		NEIGHBOR(x3,y4,x3,y3);
		NEIGHBOR(x3,y4,x3,y5);
		NEIGHBOR(x3,y4,x4,y3);
		NEIGHBOR(x3,y4,x4,y4);
		NEIGHBOR(x3,y4,x4,y5);
		NOISE-PROB(x3,y5) = 0.14125496;
		NEIGHBOR(x3,y5,x2,y4);
		NEIGHBOR(x3,y5,x2,y5);
		NEIGHBOR(x3,y5,x2,y6);
		NEIGHBOR(x3,y5,x3,y4);
		NEIGHBOR(x3,y5,x3,y6);
		NEIGHBOR(x3,y5,x4,y4);
		NEIGHBOR(x3,y5,x4,y5);
		NEIGHBOR(x3,y5,x4,y6);
		NOISE-PROB(x3,y6) = 0.11356956;
		NEIGHBOR(x3,y6,x2,y5);
		NEIGHBOR(x3,y6,x2,y6);
		NEIGHBOR(x3,y6,x3,y5);
		NEIGHBOR(x3,y6,x4,y5);
		NEIGHBOR(x3,y6,x4,y6);
		NOISE-PROB(x4,y1) = 0.1011169;
		NEIGHBOR(x4,y1,x3,y1);
		NEIGHBOR(x4,y1,x3,y2);
		NEIGHBOR(x4,y1,x4,y2);
		NEIGHBOR(x4,y1,x5,y1);
		NEIGHBOR(x4,y1,x5,y2);
		NOISE-PROB(x4,y2) = 0.14848587;
		NEIGHBOR(x4,y2,x3,y1);
		NEIGHBOR(x4,y2,x3,y2);
		NEIGHBOR(x4,y2,x3,y3);
		NEIGHBOR(x4,y2,x4,y1);
		NEIGHBOR(x4,y2,x4,y3);
		NEIGHBOR(x4,y2,x5,y1);
		NEIGHBOR(x4,y2,x5,y2);
		NEIGHBOR(x4,y2,x5,y3);
		NOISE-PROB(x4,y3) = 0.13281226;
		NEIGHBOR(x4,y3,x3,y2);
		NEIGHBOR(x4,y3,x3,y3);
		NEIGHBOR(x4,y3,x3,y4);
		NEIGHBOR(x4,y3,x4,y2);
		NEIGHBOR(x4,y3,x4,y4);
		NEIGHBOR(x4,y3,x5,y2);
		NEIGHBOR(x4,y3,x5,y3);
		NEIGHBOR(x4,y3,x5,y4);
		NOISE-PROB(x4,y4) = 0.108161844;
		NEIGHBOR(x4,y4,x3,y3);
		NEIGHBOR(x4,y4,x3,y4);
		NEIGHBOR(x4,y4,x3,y5);
		NEIGHBOR(x4,y4,x4,y3);
		NEIGHBOR(x4,y4,x4,y5);
		NEIGHBOR(x4,y4,x5,y3);
		NEIGHBOR(x4,y4,x5,y4);
		NEIGHBOR(x4,y4,x5,y5);
		NOISE-PROB(x4,y5) = 0.1080435;
		NEIGHBOR(x4,y5,x3,y4);
		NEIGHBOR(x4,y5,x3,y5);
		NEIGHBOR(x4,y5,x3,y6);
		NEIGHBOR(x4,y5,x4,y4);
		NEIGHBOR(x4,y5,x4,y6);
		NEIGHBOR(x4,y5,x5,y4);
		NEIGHBOR(x4,y5,x5,y5);
		NEIGHBOR(x4,y5,x5,y6);
		NOISE-PROB(x4,y6) = 0.101271905;
		NEIGHBOR(x4,y6,x3,y5);
		NEIGHBOR(x4,y6,x3,y6);
		NEIGHBOR(x4,y6,x4,y5);
		NEIGHBOR(x4,y6,x5,y5);
		NEIGHBOR(x4,y6,x5,y6);
		NOISE-PROB(x5,y1) = 0.10351289;
		NEIGHBOR(x5,y1,x4,y1);
		NEIGHBOR(x5,y1,x4,y2);
		NEIGHBOR(x5,y1,x5,y2);
		NEIGHBOR(x5,y1,x6,y1);
		NEIGHBOR(x5,y1,x6,y2);
		NOISE-PROB(x5,y2) = 0.12392347;
		NEIGHBOR(x5,y2,x4,y1);
		NEIGHBOR(x5,y2,x4,y2);
		NEIGHBOR(x5,y2,x4,y3);
		NEIGHBOR(x5,y2,x5,y1);
		NEIGHBOR(x5,y2,x5,y3);
		NEIGHBOR(x5,y2,x6,y1);
		NEIGHBOR(x5,y2,x6,y2);
		NEIGHBOR(x5,y2,x6,y3);
		NOISE-PROB(x5,y3) = 0.10494225;
		NEIGHBOR(x5,y3,x4,y2);
		NEIGHBOR(x5,y3,x4,y3);
		NEIGHBOR(x5,y3,x4,y4);
		NEIGHBOR(x5,y3,x5,y2);
		NEIGHBOR(x5,y3,x5,y4);
		NEIGHBOR(x5,y3,x6,y2);
		NEIGHBOR(x5,y3,x6,y3);
		NEIGHBOR(x5,y3,x6,y4);
		NOISE-PROB(x5,y4) = 0.10648622;
		NEIGHBOR(x5,y4,x4,y3);
		NEIGHBOR(x5,y4,x4,y4);
		NEIGHBOR(x5,y4,x4,y5);
		NEIGHBOR(x5,y4,x5,y3);
		NEIGHBOR(x5,y4,x5,y5);
		NEIGHBOR(x5,y4,x6,y3);
		NEIGHBOR(x5,y4,x6,y4);
		NEIGHBOR(x5,y4,x6,y5);
		NOISE-PROB(x5,y5) = 0.14843199;
		NEIGHBOR(x5,y5,x4,y4);
		NEIGHBOR(x5,y5,x4,y5);
		NEIGHBOR(x5,y5,x4,y6);
		NEIGHBOR(x5,y5,x5,y4);
		NEIGHBOR(x5,y5,x5,y6);
		NEIGHBOR(x5,y5,x6,y4);
		NEIGHBOR(x5,y5,x6,y5);
		NEIGHBOR(x5,y5,x6,y6);
		NOISE-PROB(x5,y6) = 0.103716664;
		NEIGHBOR(x5,y6,x4,y5);
		NEIGHBOR(x5,y6,x4,y6);
		NEIGHBOR(x5,y6,x5,y5);
		NEIGHBOR(x5,y6,x6,y5);
		NEIGHBOR(x5,y6,x6,y6);
		NOISE-PROB(x6,y1) = 0.13931692;
		NEIGHBOR(x6,y1,x5,y1);
		NEIGHBOR(x6,y1,x5,y2);
		NEIGHBOR(x6,y1,x6,y2);
		NOISE-PROB(x6,y2) = 0.14638856;
		NEIGHBOR(x6,y2,x5,y1);
		NEIGHBOR(x6,y2,x5,y2);
		NEIGHBOR(x6,y2,x5,y3);
		NEIGHBOR(x6,y2,x6,y1);
		NEIGHBOR(x6,y2,x6,y3);
		NOISE-PROB(x6,y3) = 0.13164192;
		NEIGHBOR(x6,y3,x5,y2);
		NEIGHBOR(x6,y3,x5,y3);
		NEIGHBOR(x6,y3,x5,y4);
		NEIGHBOR(x6,y3,x6,y2);
		NEIGHBOR(x6,y3,x6,y4);
		NOISE-PROB(x6,y4) = 0.1464143;
		NEIGHBOR(x6,y4,x5,y3);
		NEIGHBOR(x6,y4,x5,y4);
		NEIGHBOR(x6,y4,x5,y5);
		NEIGHBOR(x6,y4,x6,y3);
		NEIGHBOR(x6,y4,x6,y5);
		NOISE-PROB(x6,y5) = 0.14761668;
		NEIGHBOR(x6,y5,x5,y4);
		NEIGHBOR(x6,y5,x5,y5);
		NEIGHBOR(x6,y5,x5,y6);
		NEIGHBOR(x6,y5,x6,y4);
		NEIGHBOR(x6,y5,x6,y6);
		NOISE-PROB(x6,y6) = 0.10612049;
		NEIGHBOR(x6,y6,x5,y5);
		NEIGHBOR(x6,y6,x5,y6);
		NEIGHBOR(x6,y6,x6,y5);
	};
}

instance game_of_life_inst_pomdp__10 {
	domain = game_of_life_pomdp;
	non-fluents = nf_game_of_life_inst_pomdp__10;
	init-state {
		alive(x1,y1);
		alive(x1,y5);
		alive(x1,y6);
		alive(x2,y2);
		alive(x2,y3);
		alive(x3,y2);
		alive(x3,y6);
		alive(x4,y1);
		alive(x4,y3);
		alive(x4,y5);
		alive(x4,y6);
		alive(x5,y1);
		alive(x5,y3);
		alive(x5,y5);
		alive(x5,y6);
		alive(x6,y3);
		alive(x6,y5);
		alive(x6,y6);
	};

	max-nondef-actions = 1;
	horizon  = 30;
	discount = 1.0;
}
